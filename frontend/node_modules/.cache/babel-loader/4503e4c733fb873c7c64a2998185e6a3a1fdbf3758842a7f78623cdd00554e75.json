{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anthony\\\\Documents\\\\project\\\\project-hetic-auth-secure\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport RegisterForm from './components/RegisterForm';\nimport LoginForm from './components/LoginForm';\nimport TwoFactorAuthForm from './components/TwoFactorAuthForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [step, setStep] = useState('register');\n  const [token, setToken] = useState('');\n  const [qrCodeUrl, setQrCodeUrl] = useState('');\n  const [error, setError] = useState('');\n  const handleLogin = async (username, password) => {\n    try {\n      const response = await axios.post('http://localhost:5000/login', {\n        username,\n        password\n      });\n      const {\n        token,\n        otpAuthUrl\n      } = response.data;\n      setToken(token);\n      setQrCodeUrl(otpAuthUrl);\n      setStep('verify-2fa');\n      setError('');\n    } catch (error) {\n      console.error('Login failed:', error);\n      setError('Invalid username or password.');\n    }\n  };\n  const handleVerify2FA = async verificationCode => {\n    try {\n      await axios.post('http://localhost:5000/verify-2fa', {\n        token: verificationCode\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      console.log('Logged in successfully!');\n      setStep('logged-in');\n    } catch (error) {\n      console.error('2FA verification failed:', error);\n      setError('Invalid 2FA code.');\n    }\n  };\n  const goToLogin = () => {\n    setStep('login');\n    setError('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [step === 'register' && /*#__PURE__*/_jsxDEV(RegisterForm, {\n      goToLogin: goToLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 31\n    }, this), step === 'login' && /*#__PURE__*/_jsxDEV(LoginForm, {\n      handleLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 28\n    }, this), step === 'verify-2fa' && /*#__PURE__*/_jsxDEV(TwoFactorAuthForm, {\n      qrCodeUrl: qrCodeUrl,\n      handleVerify2FA: handleVerify2FA\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 33\n    }, this), step === 'logged-in' && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Logged in successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 32\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HBiBAGf+Q6FtOdNL4gvxqYELQyA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","RegisterForm","LoginForm","TwoFactorAuthForm","jsxDEV","_jsxDEV","App","_s","step","setStep","token","setToken","qrCodeUrl","setQrCodeUrl","error","setError","handleLogin","username","password","response","post","otpAuthUrl","data","console","handleVerify2FA","verificationCode","headers","log","goToLogin","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["C:/Users/Anthony/Documents/project/project-hetic-auth-secure/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport RegisterForm from './components/RegisterForm';\nimport LoginForm from './components/LoginForm';\nimport TwoFactorAuthForm from './components/TwoFactorAuthForm';\n\nfunction App() {\n  const [step, setStep] = useState('register');\n  const [token, setToken] = useState('');\n  const [qrCodeUrl, setQrCodeUrl] = useState('');\n  const [error, setError] = useState('');\n\n  const handleLogin = async (username, password) => {\n    try {\n      const response = await axios.post('http://localhost:5000/login', { username, password });\n      const { token, otpAuthUrl } = response.data;\n      setToken(token);\n      setQrCodeUrl(otpAuthUrl);\n      setStep('verify-2fa');\n      setError('');\n    } catch (error) {\n      console.error('Login failed:', error);\n      setError('Invalid username or password.');\n    }\n  };\n\n  const handleVerify2FA = async (verificationCode) => {\n    try {\n      await axios.post('http://localhost:5000/verify-2fa', { token: verificationCode }, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      console.log('Logged in successfully!');\n      setStep('logged-in');\n    } catch (error) {\n      console.error('2FA verification failed:', error);\n      setError('Invalid 2FA code.');\n    }\n  };\n\n  const goToLogin = () => {\n    setStep('login');\n    setError('');\n  };\n\n  return (\n    <div>\n      {step === 'register' && <RegisterForm goToLogin={goToLogin} />}\n      {step === 'login' && <LoginForm handleLogin={handleLogin} />}\n      {step === 'verify-2fa' && <TwoFactorAuthForm qrCodeUrl={qrCodeUrl} handleVerify2FA={handleVerify2FA} />}\n      {step === 'logged-in' && <h2>Logged in successfully!</h2>}\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}