{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anthony\\\\Documents\\\\project\\\\project-hetic-auth-secure\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport QRCode from 'qrcode.react'; // Bibliothèque pour afficher le QR code\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [code, setCode] = useState('');\n  const [qrCode, setQRCode] = useState('');\n  const [error, setError] = useState('');\n  const handleEnable2FA = async () => {\n    try {\n      const response = await fetch('/enable-2fa', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const data = await response.json();\n      setQRCode(data.qrCode);\n    } catch (error) {\n      setError('Erreur lors de la génération du QR code');\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password,\n          code\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        setError(data.error);\n      } else {\n        // Rediriger l'utilisateur vers une page sécurisée\n      }\n    } catch (error) {\n      setError('Erreur lors de la connexion');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Page de connexion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Mot de passe\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Code 2FA\",\n        value: code,\n        onChange: e => setCode(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), qrCode && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: qrCode,\n        alt: \"QR code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleEnable2FA,\n        children: \"Activer l'authentification \\xE0 deux facteurs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Se connecter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"p7pAM4AAEbvs4HRUoLRkPjd66j4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","QRCode","jsxDEV","_jsxDEV","App","_s","email","setEmail","password","setPassword","code","setCode","qrCode","setQRCode","error","setError","handleEnable2FA","response","fetch","method","headers","body","JSON","stringify","data","json","handleSubmit","e","preventDefault","ok","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","src","alt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Anthony/Documents/project/project-hetic-auth-secure/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport QRCode from 'qrcode.react'; // Bibliothèque pour afficher le QR code\n\nfunction App() {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [code, setCode] = useState('');\n    const [qrCode, setQRCode] = useState('');\n    const [error, setError] = useState('');\n\n    const handleEnable2FA = async () => {\n        try {\n            const response = await fetch('/enable-2fa', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ email })\n            });\n            const data = await response.json();\n            setQRCode(data.qrCode);\n        } catch (error) {\n            setError('Erreur lors de la génération du QR code');\n        }\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        try {\n            const response = await fetch('/login', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ email, password, code })\n            });\n            const data = await response.json();\n\n            if (!response.ok) {\n                setError(data.error);\n            } else {\n                // Rediriger l'utilisateur vers une page sécurisée\n            }\n        } catch (error) {\n            setError('Erreur lors de la connexion');\n        }\n    };\n\n    return (\n        <div>\n            <h1>Page de connexion</h1>\n            {error && <p>{error}</p>}\n            <form onSubmit={handleSubmit}>\n                <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n                <input type=\"password\" placeholder=\"Mot de passe\" value={password} onChange={(e) => setPassword(e.target.value)} required />\n                <input type=\"text\" placeholder=\"Code 2FA\" value={code} onChange={(e) => setCode(e.target.value)} required />\n                {qrCode && <img src={qrCode} alt=\"QR code\" />}\n                <button type=\"button\" onClick={handleEnable2FA}>Activer l'authentification à deux facteurs</button>\n                <button type=\"submit\">Se connecter</button>\n            </form>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}