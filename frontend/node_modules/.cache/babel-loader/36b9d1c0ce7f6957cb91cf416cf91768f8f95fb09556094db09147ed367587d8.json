{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anthony\\\\Documents\\\\project\\\\project-hetic-auth-secure\\\\frontend\\\\src\\\\components\\\\Enable2FA.js\",\n  _s = $RefreshSig$();\n// Enable2FA.js\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Enable2FA = () => {\n  _s();\n  const [code, setCode] = useState('');\n  const [qrCodeData, setQRCodeData] = useState('');\n  const [otpAuthUrl, setOtpAuthUrl] = useState('');\n\n  // Enable2FA.js\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('/enable-2fa', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          code\n        })\n      });\n      if (response.ok) {\n        // Redirect to login page after enabling 2FA\n        history.push('/login');\n      } else {\n        // Handle error response\n        console.error('Failed to enable 2FA:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error enabling 2FA:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Enable 2FA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), qrCodeData && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: qrCodeData,\n      alt: \"QR Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Code:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: code,\n          onChange: e => setCode(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Already enabled 2FA? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Enable2FA, \"GYwbyd18NQutH5Aennr3F19S9V4=\");\n_c = Enable2FA;\nexport default Enable2FA;\nvar _c;\n$RefreshReg$(_c, \"Enable2FA\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","Enable2FA","_s","code","setCode","qrCodeData","setQRCodeData","otpAuthUrl","setOtpAuthUrl","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","history","push","console","error","statusText","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onSubmit","type","value","onChange","target","to","_c","$RefreshReg$"],"sources":["C:/Users/Anthony/Documents/project/project-hetic-auth-secure/frontend/src/components/Enable2FA.js"],"sourcesContent":["// Enable2FA.js\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Enable2FA = () => {\r\n  const [code, setCode] = useState('');\r\n  const [qrCodeData, setQRCodeData] = useState('');\r\n  const [otpAuthUrl, setOtpAuthUrl] = useState('');\r\n\r\n// Enable2FA.js\r\nconst handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n  try {\r\n    const response = await fetch('/enable-2fa', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ code }),\r\n    });\r\n    if (response.ok) {\r\n      // Redirect to login page after enabling 2FA\r\n      history.push('/login');\r\n    } else {\r\n      // Handle error response\r\n      console.error('Failed to enable 2FA:', response.statusText);\r\n    }\r\n  } catch (error) {\r\n    console.error('Error enabling 2FA:', error);\r\n  }\r\n};\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>Enable 2FA</h2>\r\n      {qrCodeData && <img src={qrCodeData} alt=\"QR Code\" />}\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Code:</label>\r\n          <input type=\"text\" value={code} onChange={(e) => setCode(e.target.value)} />\r\n        </div>\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n      <p>Already enabled 2FA? <Link to=\"/login\">Log In</Link></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Enable2FA;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}