{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anthony\\\\Documents\\\\project\\\\project-hetic-auth-secure\\\\frontend\\\\src\\\\components\\\\LoginForm\\\\LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Inputs } from '../Inputs/Inputs';\nimport { Buttons } from '../Buttons/Buttons';\nimport { Forms } from '../Forms/Forms';\nimport { Title } from '../Title/Title';\nimport '../../styles/styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LoginForm = ({\n  onLogin,\n  goToRegister\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const handleLogin = async (username, password) => {\n    if (!username || !password) {\n      setError('Please fill in all fields.');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/auth/login', {\n        username,\n        password\n      });\n      setError('');\n      onLogin(response.data.token, response.data.secret, response.data.qrCodeUrl);\n    } catch (error) {\n      console.error('Login failed:', error);\n      setError('Login failed. Please try again.');\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleLogin(username, password);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      text: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Forms, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Inputs, {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Inputs, {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n        onClick: goToRegister,\n        children: \"You don't have an account ? Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error && error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"lABZ+K3zbnEaFQvlduiFXLNOf5A=\");\n_c = LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","axios","Inputs","Buttons","Forms","Title","jsxDEV","_jsxDEV","LoginForm","onLogin","goToRegister","_s","username","setUsername","password","setPassword","error","setError","handleLogin","response","post","data","token","secret","qrCodeUrl","console","handleSubmit","e","preventDefault","children","text","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","onClick","className","_c","$RefreshReg$"],"sources":["C:/Users/Anthony/Documents/project/project-hetic-auth-secure/frontend/src/components/LoginForm/LoginForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Inputs } from '../Inputs/Inputs';\r\nimport { Buttons } from '../Buttons/Buttons';\r\nimport { Forms } from '../Forms/Forms';\r\nimport { Title } from '../Title/Title';\r\n\r\nimport '../../styles/styles.scss';\r\n\r\nexport const LoginForm = ({ onLogin, goToRegister}) => {\r\n\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleLogin = async (username, password) => {\r\n\r\n    if (!username || !password) {\r\n\r\n      setError('Please fill in all fields.');\r\n      return;\r\n\r\n    }\r\n\r\n    try {\r\n\r\n      const response = await axios.post('http://localhost:5000/auth/login', { username, password });\r\n\r\n      setError('');\r\n      onLogin(response.data.token, response.data.secret, response.data.qrCodeUrl);\r\n\r\n    } catch (error) {\r\n\r\n      console.error('Login failed:', error);\r\n      setError('Login failed. Please try again.');\r\n\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n\r\n    e.preventDefault();\r\n    handleLogin(username, password);\r\n\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Title text={\"Login\"}/>\r\n      <Forms onSubmit={handleSubmit}>\r\n        <Inputs type={\"text\"} placeholder={\"Username\"} value={username} onChange={e => setUsername(e.target.value)} />\r\n        <Inputs type={\"password\"} placeholder={\"Password\"} value={password} onChange={e => setPassword(e.target.value)} />\r\n        <Buttons type={\"submit\"}>Login</Buttons>\r\n        <Buttons onClick={goToRegister}>You don't have an account ? Register</Buttons>\r\n      </Forms>\r\n      <p className='error'>{error && error}</p>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}