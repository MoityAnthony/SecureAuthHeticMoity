{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anthony\\\\Documents\\\\project\\\\project-hetic-auth-secure\\\\frontend\\\\src\\\\components\\\\TwoFactorAuthForm\\\\TwoFactorAuthForm.js\";\nimport React, { useState } from 'react';\nimport QrCode from 'qrcode.react';\nimport { Inputs } from '../Inputs/Inputs';\nimport { Buttons } from '../Buttons/Buttons';\nimport { Forms } from '../Forms/Forms';\nimport { Title } from '../Title/Title';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TwoFactorAuthForm = ({\n  token,\n  secret,\n  qrCodeUrl,\n  onVerify2FA\n}) => {\n  const handleVerify2FA = async (token, verificationCode) => {\n    if (!verificationCode) {\n      setError('Please enter the verification code.');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/auth/verify-2fa', {\n        verificationCode,\n        secret\n      });\n      console.log('2FA verification successful!');\n      setError('');\n      onVerify2FA();\n    } catch (error) {\n      console.error('2FA verification failed:', error);\n      setError('2FA verification failed. Please try again.');\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleVerify2FA(verificationCode, secret);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      text: \"Verify 2FA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), qrCodeUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(QrCode, {\n        value: qrCodeUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Scan this QR code with your authenticator app\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Forms, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Inputs, {\n        type: \"text\",\n        placeholder: \"Enter 2FA code\",\n        value: verificationCode,\n        onChange: e => setVerificationCode(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n        type: \"submit\",\n        children: \"Verify 2FA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c = TwoFactorAuthForm;\nvar _c;\n$RefreshReg$(_c, \"TwoFactorAuthForm\");","map":{"version":3,"names":["React","useState","QrCode","Inputs","Buttons","Forms","Title","jsxDEV","_jsxDEV","TwoFactorAuthForm","token","secret","qrCodeUrl","onVerify2FA","handleVerify2FA","verificationCode","setError","response","axios","post","console","log","error","handleSubmit","e","preventDefault","children","text","fileName","_jsxFileName","lineNumber","columnNumber","value","onSubmit","type","placeholder","onChange","setVerificationCode","target","className","_c","$RefreshReg$"],"sources":["C:/Users/Anthony/Documents/project/project-hetic-auth-secure/frontend/src/components/TwoFactorAuthForm/TwoFactorAuthForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport QrCode from 'qrcode.react';\r\nimport { Inputs } from '../Inputs/Inputs';\r\nimport { Buttons } from '../Buttons/Buttons';\r\nimport { Forms } from '../Forms/Forms';\r\nimport { Title } from '../Title/Title';\r\n\r\nexport const TwoFactorAuthForm = ({ token, secret, qrCodeUrl, onVerify2FA }) => {\r\n\r\n  const handleVerify2FA = async (token, verificationCode) => {\r\n    if (!verificationCode) {\r\n      setError('Please enter the verification code.');\r\n      return;\r\n    }\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/auth/verify-2fa', { verificationCode, secret });\r\n      console.log('2FA verification successful!');\r\n      setError('');\r\n      onVerify2FA();\r\n    } catch (error) {\r\n      console.error('2FA verification failed:', error);\r\n      setError('2FA verification failed. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleVerify2FA(verificationCode, secret);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Title text={\"Verify 2FA\"}/>\r\n      {qrCodeUrl && (\r\n        <div>\r\n          <QrCode value={qrCodeUrl} />\r\n          <p>Scan this QR code with your authenticator app</p>\r\n        </div>\r\n      )}\r\n      <Forms onSubmit={handleSubmit}>\r\n        <Inputs type={\"text\"} placeholder={\"Enter 2FA code\"} value={verificationCode} onChange={e => setVerificationCode(e.target.value)} />\r\n        <Buttons type={\"submit\"}>Verify 2FA</Buttons>\r\n      </Forms>\r\n      {error && <p className='error'>{error}</p>}\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}