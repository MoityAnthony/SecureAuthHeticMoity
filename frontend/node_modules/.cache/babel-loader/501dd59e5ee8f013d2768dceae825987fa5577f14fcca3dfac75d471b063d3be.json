{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anthony\\\\Documents\\\\project\\\\project-hetic-auth-secure\\\\frontend\\\\src\\\\components\\\\RegisterForm\\\\RegisterForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RegisterForm = ({\n  onRegister\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const handleRegister = async (username, password) => {\n    if (!username || !password) {\n      setError('Please fill in all fields.');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/auth/register', {\n        username,\n        password\n      });\n      console.log('Registered successfully!');\n      onRegister(); // Utiliser la fonction onRegister passée en prop pour changer de step\n      setError('');\n    } catch (error) {\n      if (error.response && error.response.status === 400) {\n        console.log(error.response.data.errors);\n        setError(error.response.data.message && \"Password must contain: \" + error.response.data.errors);\n      } else if (error.response && error.response.status === 409) {\n        setError('User already exists. Please proceed to login.');\n      } else {\n        console.error('Registration failed:', error);\n        setError('Registration failed. Please try again.');\n      }\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleRegister(username, password);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterForm, \"lABZ+K3zbnEaFQvlduiFXLNOf5A=\");\n_c = RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","RegisterForm","onRegister","_s","username","setUsername","password","setPassword","error","setError","handleRegister","response","post","console","log","status","data","errors","message","handleSubmit","e","preventDefault","className","children","onSubmit","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Anthony/Documents/project/project-hetic-auth-secure/frontend/src/components/RegisterForm/RegisterForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const RegisterForm = ({ onRegister }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleRegister = async (username, password) => {\r\n    if (!username || !password) {\r\n      setError('Please fill in all fields.');\r\n      return;\r\n    }\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/auth/register', { username, password });\r\n      console.log('Registered successfully!');\r\n      onRegister(); // Utiliser la fonction onRegister passée en prop pour changer de step\r\n      setError('');\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400) {\r\n        console.log(error.response.data.errors);\r\n        setError(error.response.data.message && \"Password must contain: \" + error.response.data.errors);\r\n      } else if (error.response && error.response.status === 409) {\r\n        setError('User already exists. Please proceed to login.');\r\n      } else {\r\n        console.error('Registration failed:', error);\r\n        setError('Registration failed. Please try again.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleRegister(username, password);\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-form\">\r\n      <form onSubmit={handleSubmit}>\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"Username\" \r\n          value={username} \r\n          onChange={(e) => setUsername(e.target.value)} \r\n        />\r\n        <input \r\n          type=\"password\" \r\n          placeholder=\"Password\" \r\n          value={password} \r\n          onChange={(e) => setPassword(e.target.value)} \r\n        />\r\n        <button type=\"submit\">Register</button>\r\n        {error && <p>{error}</p>} {/* Afficher le message d'erreur */}\r\n      </form>\r\n    </div>\r\n  );\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMa,cAAc,GAAG,MAAAA,CAAON,QAAQ,EAAEE,QAAQ,KAAK;IACnD,IAAI,CAACF,QAAQ,IAAI,CAACE,QAAQ,EAAE;MAC1BG,QAAQ,CAAC,4BAA4B,CAAC;MACtC;IACF;IACA,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,qCAAqC,EAAE;QAAER,QAAQ;QAAEE;MAAS,CAAC,CAAC;MAChGO,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvCZ,UAAU,CAAC,CAAC,CAAC,CAAC;MACdO,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,CAAC,OAAOD,KAAK,EAAE;MACd,IAAIA,KAAK,CAACG,QAAQ,IAAIH,KAAK,CAACG,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;QACnDF,OAAO,CAACC,GAAG,CAACN,KAAK,CAACG,QAAQ,CAACK,IAAI,CAACC,MAAM,CAAC;QACvCR,QAAQ,CAACD,KAAK,CAACG,QAAQ,CAACK,IAAI,CAACE,OAAO,IAAI,yBAAyB,GAAGV,KAAK,CAACG,QAAQ,CAACK,IAAI,CAACC,MAAM,CAAC;MACjG,CAAC,MAAM,IAAIT,KAAK,CAACG,QAAQ,IAAIH,KAAK,CAACG,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;QAC1DN,QAAQ,CAAC,+CAA+C,CAAC;MAC3D,CAAC,MAAM;QACLI,OAAO,CAACL,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CC,QAAQ,CAAC,wCAAwC,CAAC;MACpD;IACF;EACF,CAAC;EAED,MAAMU,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBX,cAAc,CAACN,QAAQ,EAAEE,QAAQ,CAAC;EACpC,CAAC;EAED,oBACEN,OAAA;IAAKsB,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC5BvB,OAAA;MAAMwB,QAAQ,EAAEL,YAAa;MAAAI,QAAA,gBAC3BvB,OAAA;QACEyB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAEvB,QAAS;QAChBwB,QAAQ,EAAGR,CAAC,IAAKf,WAAW,CAACe,CAAC,CAACS,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACFjC,OAAA;QACEyB,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAErB,QAAS;QAChBsB,QAAQ,EAAGR,CAAC,IAAKb,WAAW,CAACa,CAAC,CAACS,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACFjC,OAAA;QAAQyB,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAQ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACtCzB,KAAK,iBAAIR,OAAA;QAAAuB,QAAA,EAAIf;MAAK;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAAC,GAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC9B,EAAA,CArDWF,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}